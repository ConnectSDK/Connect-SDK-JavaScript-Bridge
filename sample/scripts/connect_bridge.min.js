//
//  Connect SDK JavaScript Bridge
//  Version 1.3.0 Date: 11 Jun 2014 2:22 PM
//
//  Created by Jeremy White on 4/16/14.
//  Copyright (c) 2014 LG Electronics.
//
//  Licensed under the Apache License, Version 2.0 (the "License");
//  you may not use this file except in compliance with the License.
//  You may obtain a copy of the License at
//
//      http://www.apache.org/licenses/LICENSE-2.0
//
//  Unless required by applicable law or agreed to in writing, software
//  distributed under the License is distributed on an "AS IS" BASIS,
//  WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
//  See the License for the specific language governing permissions and
//  limitations under the License.
//
// Samsung MultiScreen setup
// Connect SDK JavaScript Bridge API Declarations
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Mixins
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// ConnectManager
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Platforms
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// WebOSAppChannels
////////////////////////////////////////////////////////////////////////////////////////////////////////////////
// Helpers
// very simple class maker
navigator.userAgent.search(/Maple/)>-1&&(document.write('<script src="$MANAGER_WIDGET/Common/API/Widget.js"></script>'),document.write('<script src="$MANAGER_WIDGET/Common/API/TVKeyValue.js"></script>'),document.write('<script src="$MANAGER_WIDGET/Common/API/Plugin.js"></script>'),window.addEventListener("load",function(){var e=new Common.API.Widget;e.sendReadyEvent()}));var connectsdk=function(){function e(e){var t;if(!e.constructor)throw t=function(){},Error("no constructor");t=e.constructor,delete e.constructor;var s=t.prototype;return e.mixins&&(e.mixins.forEach(function(e){n(s,e)}),delete e.mixins),e.statics&&(n(t,e.statics),delete e.statics),n(s,e),t}function n(e,n){for(var t in n)n.hasOwnProperty(t)&&!e.hasOwnProperty(t)&&(e[t]=n[t]);return e}function t(){}var s={addListener:function(e,n,t){if(!e)throw Error("missing parameter: event");if(!n)throw Error("missing parameter: callback");return this._listeners=this._listeners||{},this._listeners||(this._listeners={}),this._listeners[e]||(this._listeners[e]=[]),this._listeners[e].push({callback:n,context:t}),this.emit("_addListener",e),this},removeListener:function(e,n,t){return this._listeners&&this._listeners[e]&&(this._listeners[e]=this._listeners[e].filter(function(e){return n&&n!==e.callback&&t&&t!==e.context})),this.emit("_removeListener",e),this},hasListeners:function(e){if(e)return this._listeners&&this._listeners[e]&&this._listeners[e].length>0;for(e in this._listeners)if("_"!==e[0]&&this._listeners.hasOwnProperty(e)&&this._listeners[e].length>0)return!0;return!1},emit:function(e){var n=this._listeners&&this._listeners[e],t=Array.prototype.slice.call(arguments,1);e=e.charAt(0).toUpperCase()+e.slice(1),this["on"+e]&&this["on"+e].apply(this,t),n&&n.forEach(function(e){e.callback.apply(e.context||null,t)})},on:function(e,n,t){return this.addListener(e,n,t)},off:function(e,n,t){return this.removeListener(e,n,t)}},i=e({mixins:[s],statics:{PlatformType:{DEFAULT:"Default",AIRPLAY:"AirPlay",GOOGLE_CAST:"GoogleCast",WEBOS_NATIVE:"WebOSNative",WEBOS_WEB_APP:"WebOSWebApp",MULTISCREEN:"MultiScreen"},EventType:{MESSAGE:"message",PAUSE:"pause",PLAY:"play",READY:"ready",STOP:"stop",STATUS:"mediaStatusUpdate",JOIN:"join",DEPART:"depart"}},mediaEvents:{loadstart:"buffering",playing:"playing",waiting:"buffering",abort:"finished",ended:"finished",play:"playing",pause:"paused"},constructor:function(){this.handleMediaEvent=this.handleMediaEvent.bind(this),n(this,a[this._detectPlatform()])},setImageElement:function(e){e&&(this.imageElement=e)},setMediaElement:function(e){this.mediaElement&&this.unregisterMediaEvents(this.mediaElement),e&&(this.registerMediaEvents(e),this.mediaElement=e,this.mediaElement.autoPlay=!0,this.setMediaStatus("idle"))},setMediaStatus:function(e){this.mediaStatus=e,this.emit(i.EventType.STATUS,e)},registerMediaEvents:function(e){if(e)for(var n in this.mediaEvents)this.mediaEvents.hasOwnProperty(n)&&e.addEventListener(n,this.handleMediaEvent,!1)},unregisterMediaEvents:function(e){if(e)for(var n in this.mediaEvents)this.mediaEvents.hasOwnProperty(n)&&e.removeEventListener(n,this.handleMediaEvent,!1)},handleMediaEvent:function(e){this.mediaEvents.hasOwnProperty(e.type)&&this.setMediaStatus(this.mediaEvents[e.type])},handleReady:function(){this.emit(i.EventType.READY)},handleJoin:function(e){this.emit(i.EventType.JOIN,e)},handleDepart:function(e){this.emit(i.EventType.DEPART,e)},_detectPlatform:function(){var e=navigator.userAgent.toLowerCase();return this.platformType=i.PlatformType.DEFAULT,e.indexOf("iphone os")>=0?this.platformType=i.PlatformType.AIRPLAY:e.indexOf("crkey")>0&&null!=cast?this.platformType=i.PlatformType.GOOGLE_CAST:e.indexOf("tv")>=0&&e.indexOf("webos")>=0||e.indexOf("web0s")>=0?this.platformType=window.PalmServiceBridge?i.PlatformType.WEBOS_NATIVE:i.PlatformType.WEBOS_WEB_APP:navigator.userAgent.search(/Maple/)>-1&&(this.platformType=i.PlatformType.MULTISCREEN),console.log("detected type "+this.platformType+"("+navigator.userAgent+")"),this.platformType},init:t,sendMessage:t,broadcastMessage:t}),a={};a.Default={interactive:!1,init:t,sendMessage:t,broadcastMessage:t};var o={onLoadImage:function(e){var n=this.imageElement;n&&e&&e.mediaURL?(console.log("Loading image",e.mediaURL),n.src=e.mediaURL):console.log("Failed to load image")},onLoadMedia:function(e){var n=this.mediaElement;n&&e&&e.mediaURL?(console.log("Loading",e.mediaURL),n.src=e.mediaURL,n.load()):console.log("Failed to load media")},handleDisplayImage:function(e){var n=e.from,t=e.message.mediaCommand,s=t.type,i=t.requestId;this.emit("loadImage",t),this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:s,requestId:i}})},handleGetDuration:function(e){var n=e.from,t=e.message.mediaCommand.type,s=e.message.mediaCommand.requestId,i=this.mediaElement,a=i&&i.duration||0;this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:t,duration:a,requestId:s}})},handleGetPosition:function(e){var n=e.from,t=e.message.mediaCommand.type,s=e.message.mediaCommand.requestId,i=this.mediaElement,a=i&&i.currentTime||0;this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:t,position:a,requestId:s}})},handleMediaStatusUpdate:function(e){var n=this.mediaStatus,t=0,s=0,i=this.mediaElement;if(i){if(t=i.currentTime,0/0!=i.duration&&(s=i.duration),null==n)return;this.broadcastMessage({contentType:"connectsdk.mediaEvent",mediaEvent:{type:"playState",playState:n,position:t,duration:s,requestId:e?e:-1}})}},handlePlayMedia:function(e){var n=e.from,t=e.message.mediaCommand,s=t.type,i=t.requestId;this.emit("loadMedia",t),this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:s,requestId:i}})},handleSeek:function(e){var n=e.from,t=e.message.mediaCommand,s=t.type,i=t.requestId,a=t.position;if(a){var o=this.mediaElement;o&&(o.currentTime=a),this.handleMediaStatusUpdate(-1)}this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:s,requestId:i}})},handlePlay:function(e){var n=e.from,t=e.message.mediaCommand,s=t.type,i=t.requestId,a=this.mediaElement;a&&a.play(),this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:s,requestId:i}})},handlePause:function(e){var n=e.from,t=e.message.mediaCommand,s=t.type,i=t.requestId,a=this.mediaElement;a&&a.pause(),this.sendMessage(n,{contentType:"connectsdk.mediaCommandResponse",mediaCommandResponse:{type:s,requestId:i}})},handleMessage:function(e){var n=null;if(null!=e&&null!=e.message&&(n=e.message.contentType,null==n))try{n=JSON.parse(e.message).contentType}catch(t){}switch(n){case"connectsdk.mediaCommand":this.handleMediaCommand(e);break;case"connectsdk.serviceCommand":this.handleServiceCommand(e);break;default:this.emit(i.EventType.MESSAGE,e)}},handleMediaCommand:function(e){var n=e.message.mediaCommand;if(n){var t=n.type;switch(console.log("processing mediaCommand "+JSON.stringify(n)+" of type "+t),t){case"displayImage":this.handleDisplayImage(e);break;case"getDuration":this.handleGetDuration(e);break;case"getPosition":this.handleGetPosition(e);break;case"playMedia":this.handlePlayMedia(e);break;case"seek":this.handleSeek(e);break;case"play":this.handlePlay(e);break;case"pause":this.handlePause(e)}}},handleServiceCommand:function(e){var n=e.message.serviceCommand;if(n){var t=n.type;switch(console.log("processing serviceCommand "+JSON.stringify(n)+" of type "+t),t){case"close":var s=window.open(window.location,"_self");null!=s?s.close():window.close()}}}},d=n({interactive:!0,init:function(){window.addEventListener("keydown",this.handleKeyDown.bind(this)),this.on(i.EventType.STATUS,this.handleMediaStatusUpdate.bind(this)),this.webOSAppChannels=new c,this.webOSAppChannels.on("message",this.handleMessage.bind(this)),this.webOSAppChannels.on("ready",this.handleReady.bind(this)),this.webOSAppChannels.on("join",this.handleJoin.bind(this)),this.webOSAppChannels.on("depart",this.handleDepart.bind(this)),this.webOSAppChannels.start()},sendMessage:function(e,n){this.webOSAppChannels.sendMessage(e,n)},broadcastMessage:function(e){this.webOSAppChannels.broadcastMessage(e)},handleKeyDown:function(e){if(this.mediaElement)switch(e.keyCode){case 415:console.log(this.name+" :: play command received"),this.mediaElement.play(),this.emit(i.EventType.PLAY);break;case 19:console.log(this.name+" :: pause command received"),this.mediaElement.pause(),this.emit(i.EventType.PAUSE);break;case 413:console.log(this.name+" :: stop command received"),this.emit(i.EventType.STOP)}}},o);a.WebOSNative=n({name:"webOS Native Web App"},d),a.WebOSWebApp=n({name:"webOS Web App"},d),a.AirPlay=n({name:"AirPlay",interactive:!0,init:function(){this.on(i.EventType.STATUS,this.handleMediaStatusUpdate.bind(this))},sendMessage:function(e,n){this.broadcastMessage(n)},broadcastMessage:function(e){var n;n="string"==typeof e?e:JSON.stringify(e);var t=document.createElement("IFRAME");t.setAttribute("src","connectsdk://"+n),document.documentElement.appendChild(t),t.parentNode.removeChild(t),t=null}},o),a.GoogleCast={name:"Google Cast",interactive:!1,init:function(){var e=this.setMediaElement;this.setMediaElement=function(n){e.apply(this,arguments),this._setCastElement(n)},this._setCastElement(this.mediaElement),window.castReceiverManager=cast.receiver.CastReceiverManager.getInstance(),window.castReceiverManager.addEventListener("ready",this._handleReady.bind(this)),window.castMessageBus=window.castReceiverManager.getCastMessageBus("urn:x-cast:com.connectsdk"),window.castMessageBus.addEventListener("message",this.handleMessage.bind(this)),window.castReceiverManager.start()},_handleReady:function(e){window.castReceiverManager.addEventListener(cast.receiver.CastReceiverManager.EventType.SENDER_CONNECTED,this.handleSenderConnected.bind(this)),window.castReceiverManager.addEventListener(cast.receiver.CastReceiverManager.EventType.SENDER_DISCONNECTED,this.handleSenderDisconnected.bind(this)),this.handleReady(e)},_setCastElement:function(e){e&&(window.castMediaManager?window.castMediaManager.setMediaElement(e):window.castMediaManager=new cast.receiver.MediaManager(e))},handleMessage:function(e){var n;try{n=JSON.parse(e.data)}catch(t){n=e.data}this.emit(i.EventType.MESSAGE,{from:e.senderId,message:n})},sendMessage:function(e,n){var t;if("string"==typeof n)window.castMessageBus.send(e,n);else{var t=JSON.stringify(n);t&&window.castMessageBus.send(e,t)}},broadcastMessage:function(e){var n;if("string"==typeof e)window.castMessageBus.broadcast(e);else{var n=JSON.stringify(e);n&&window.castMessageBus.broadcast(n)}},handleSenderConnected:function(e){null!=e&&null!=e.senderId&&(e.id=e.senderId,this.emit(i.EventType.JOIN,e))},handleSenderDisconnected:function(e){null!=e&&null!=e.senderId&&(e.id=e.senderId,this.emit(i.EventType.DEPART,e))}},a.MultiScreen=n({name:"Samsung MultiScreen",interactive:!0,init:function(){this.channel=null,this.localDevice=null,null==this.channelId&&(this.channelId="com.connectsdk.MainChannel");var e=window.webapis.multiscreen;e.Device.getCurrent(this._handleDeviceRetrieved.bind(this),null);var n=this.setMediaElement;this.setMediaElement=function(e){n.apply(this,arguments),this._setCastElement(e)},this.on(i.EventType.STATUS,this.handleMediaStatusUpdate.bind(this)),window.onPause=this._handleWindowPause.bind(this),window.onResume=this._handleWindowResume.bind(this)},_handleDeviceRetrieved:function(e){this.localDevice=e,this.localDevice.openChannel(this.channelId,{name:"Host"},this._handleConnect.bind(this),null)},_handleConnect:function(e){this.channel=e,this.channel.on("message",this._handleMessage.bind(this)),this.channel.on("clientConnect",this._handleClientConnect.bind(this)),this.channel.on("clientDisconnect",this._handleClientDisconnect.bind(this))},_handleWindowPause:function(){this.channel&&this.channel.disconnect()},_handleWindowResume:function(){this._handleDeviceRetrieved(this.localDevice)},_handleClientConnect:function(e){this.emit(i.EventType.JOIN,e)},_handleClientDisconnect:function(e){this.emit(i.EventType.DEPART,e)},_handleMessage:function(e,n){console.log("got message ("+e+") from client: "+n+" with id "+n.id);var t;try{t=JSON.parse(e)}catch(s){t=e}finally{"string"==typeof t?this.emit(i.EventType.MESSAGE,{from:n.id,message:t}):this.handleMessage({from:n.id,message:t})}},sendMessage:function(e,n){var t;if("string"==typeof n)this.channel.send(n,e);else{var t=JSON.stringify(n);t&&this.channel.send(t,e)}},broadcastMessage:function(e){var n;if("string"==typeof e)this.channel.broadcast(e);else{var n=JSON.stringify(e);n&&this.channel.broadcast(n)}},handleServiceCommand:function(e){var n=e.message.serviceCommand;if(n){var t=n.type;console.log("processing serviceCommand "+JSON.stringify(n)+" of type "+t);var s=null;switch(t){case"close":s=new Common.API.Widget,s.sendExitEvent()}}}},o);var r,c=e({mixins:[s],constructor:function(){function e(e,n,t){var s=new window.PalmServiceBridge;return s.onservicecallback=function(e){t(JSON.parse(e))},s.call(e,JSON.stringify(n||{})),s}function n(e){for(var n,t=e.split("&"),s={},i=0,a=t.length;a>i;i++)n=t[i].split("="),s[n[0]]=decodeURIComponent(n[1]);return s}if(r)return r;if(r=this,this.stopRequested=!1,this.ws=null,this.channels=[],window.PalmServiceBridge){var t,s="com.webos.service.secondscreen.gateway",i="luna://com.webos.service.secondscreen.gateway/app2app/createAppChannel",a="luna://com.palm.bus/signal/registerServerStatus";this.getAppChannelWebSocket=function(n){statusSubcription=e(a,{subscribe:!0,serviceName:s},function(s){s&&s.connected&&(t=e(i,{},function(e){e.socketUrl&&n(new WebSocket(e.socketUrl))}))})}}else{var o=!1;if(window.location.search){console.log("found params: ",window.location.search);var d=n(window.location.search.substr(1));d.webOSAppChannelSocketUrl&&(console.log("found websocket URL: ",d.webOSAppChannelSocketUrl),o=!0,this.getAppChannelWebSocket=function(e){e(new WebSocket(d.webOSAppChannelSocketUrl))})}if(!o&&window.NetCastCreateAppChannel){var c="_webOSCreateAppChannelCallback";this.getAppChannelWebSocket=function(e){window[c]=function(n){delete window[c],n.socketUrl&&e(new WebSocket(n.socketUrl))},window.NetCastCreateAppChannel("{}",c,!1)}}}},getAppChannelWebSocket:function(){console.error("app channel socket not supported")},start:function(){this.stopRequested=!1;var e=this;!this.ws&&this.getAppChannelWebSocket(function(n){return e.stopRequested?(e.stop(),void 0):(e.ws=n,e.ws.onopen=function(n){console.log("websocket opened"),e.emit("ready",n)},e.ws.onerror=function(e){console.log("websocket error:",e)},e.ws.onmessage=function(n){try{var t=JSON.parse(n.data)}catch(s){return}switch(console.log("got message: "+JSON.stringify(t)),t.type){case"p2p":e._handleP2PMessage(t);break;case"p2p.depart":e._handleP2PDepart(t);break;case"p2p.join":e._handleP2PJoin(t);break;case"p2p.join-request":e._handleP2PJoinRequest(t)}},e.ws.onclose=function(){e.ws=null},void 0)})},stop:function(){this.stopRequested=!0,this.ws&&this.ws.close(),this._destroy()},sendMessage:function(e,n){var t={type:"p2p",to:e,payload:n};this._send(t)},broadcastMessage:function(e){var n={type:"p2p",payload:e};this._send(n)},_send:function(e){this.ws&&e&&(console.log("sending message: ",e),this.ws.send(JSON.stringify(e)))},_destroy:function(){this.ws&&(this.ws=null)},_handleP2PMessage:function(e){var n=e.payload;n&&(console.log("processing message payload "+JSON.stringify(n)),this.emit("message",{from:e.from,message:e.payload}))},_handleP2PJoinRequest:function(e){var n=e.payload;n&&this._send({type:"p2p.join-response",payload:{allowJoin:!0,requestId:n.requestId}})},_handleP2PJoin:function(e){var n=e.client;n&&(console.log("processing client join "+JSON.stringify(n)),this.emit(i.EventType.JOIN,n))},_handleP2PDepart:function(e){var n=e.from;n&&(console.log("processing client departure "+n),this.emit(i.EventType.DEPART,{id:n}))}});return{ConnectManager:i,WebOSAppChannels:c}}();